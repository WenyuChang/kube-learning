# When a secret being already consumed in a volume is updated, projected keys are eventually updated as well.
# Kubelet is checking whether the mounted secret is fresh on every periodic sync. However, it is using its
# local ttl-based cache for getting the current value of the secret. As a result, the total delay from the
# moment when the secret is updated to the moment when new keys are projected to the pod can be as long as
# kubelet sync period + ttl of secrets cache in kubelet.

# None of the pod’s containers will start until all the pod’s volumes are mounted.


---
apiVersion: "v1"
kind: "Secret"
metadata:
  name: mysecret
data:
  # Generate secrets:
  # $ echo -n "admin" | base64
  # $ echo -n "1f2d1e2e67df" | base64
  # Decode approach:
  # echo "MWYyZDFlMmU2N2Rm" | base64 --decode
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm


# Using Secrets as File Mount
---
apiVersion: v1
kind: Pod
metadata:
  name: test-secrets-pd
spec:
  containers:
  - name: mypod
    image: nginx:1.13.9-alpine
    volumeMounts:
    - name: foo
      mountPath: "/etc/foo"
      readOnly: true
  volumes:
  - name: foo
    secret:
      secretName: mysecret

      # Projection of secret keys to specific paths
      # stored under /etc/foo/my-group/my-username
      # Optional
      items:
      - key: username
        path: my-group/my-username
        # specify different permission for different files
        mode: 511
      - key: password
        path: my-group/my-password
        # specify different permission for different files
        mode: 0611

      # 0644 is used by default
      # a default mode for the whole secret volume and override per key if needed
      defaultMode: 0644


# Using Secrets as Environment Variables
# $ echo $SECRET_USERNAME
# $ echo $SECRET_PASSWORD
---
apiVersion: v1
kind: Pod
metadata:
  name: secret-env-pod
spec:
  containers:
  - name: mycontainer
    image: redis
    env:
      - name: SECRET_USERNAME
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: username
      - name: SECRET_PASSWORD
        valueFrom:
          secretKeyRef:
            name: mysecret
            key: password
  restartPolicy: Never